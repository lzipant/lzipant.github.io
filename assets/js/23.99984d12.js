(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{540:function(a,t,e){"use strict";e.r(t);var s=e(16),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("使用JDBC操作数据源大致需要以下几个步骤：")]),a._v(" "),e("ul",[e("li",[a._v("与数据库建立连接")]),a._v(" "),e("li",[a._v("执行SQL语句")]),a._v(" "),e("li",[a._v("检索SQL执行结果")]),a._v(" "),e("li",[a._v("关闭连接")])]),a._v(" "),e("h2",{attrs:{id:"建立数据源连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立数据源连接"}},[a._v("#")]),a._v(" 建立数据源连接")]),a._v(" "),e("p",[a._v("JDBC API中定义了"),e("code",[a._v("Connection")]),a._v("接口，用来表示与底层数据源的连接。应用程序可以使用两种方式获取"),e("code",[a._v("Connection")]),a._v("对象。")]),a._v(" "),e("ul",[e("li",[e("p",[e("code",[a._v("DriverManager")]),a._v("：JDBC 1.0规范中就已经存在，完全由JDBC API实现。")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Connection")]),a._v(" connection "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DriverManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getConection")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("JDBC 4.0之后的版本，创建"),e("code",[a._v("Connection")]),a._v("对象之前，不再需要通过"),e("code",[a._v("Class.forName(DriverPath)")]),a._v("显示地加载驱动类，"),e("code",[a._v("DriverManager")]),a._v("类通过SPI机制加载驱动。"),e("code",[a._v("DriverManager")]),a._v("中有三个"),e("code",[a._v("getConection()")]),a._v("的重载，根据数据库连接信息的不同可以使用不同的重载版本。")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("DataSource")]),a._v("：这个接口是在JDBC 2.0规范可选包中引入的。它提供了比"),e("code",[a._v("DriverManager")]),a._v("更多的底层数据源相关的细节。相比"),e("code",[a._v("DriverManager")]),a._v("，这种方式不需要对连接信息进行硬编码。第二个优势体现在连接池和分布式事务上。")])])]),a._v(" "),e("p",[a._v("JDBC API中只提供了"),e("code",[a._v("DataSource")]),a._v("接口的定义，而没有提供实现，具体的实现由JDBC驱动程序提供，另外一些主流的数据库连接池（如Druid）也提供了实现。MyBatis框架中也提供了"),e("code",[a._v("DataSource")]),a._v("接口的实现，可以通过"),e("code",[a._v("DataSourceFactory")]),a._v("来获取。")]),a._v(" "),e("p",[a._v("JDBC API中定义了两个"),e("code",[a._v("DataSource")]),a._v("接口比较重要的扩展，分别为：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("ConnectionPoolDataSource")]),a._v("：支持缓存和复用"),e("code",[a._v("Conection")]),a._v("对象，在很大程度上提升应用性能和伸缩性。")]),a._v(" "),e("li",[e("code",[a._v("XADataSource")]),a._v("：该实例返回的"),e("code",[a._v("Connection")]),a._v("对象能够支持分布式事务。")])]),a._v(" "),e("h2",{attrs:{id:"执行sql语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行sql语句"}},[a._v("#")]),a._v(" 执行SQL语句")]),a._v(" "),e("p",[a._v("因为不同的数据库提供的操作可能会有差别，所以JDBC API中提供了"),e("code",[a._v("DataBaseMetadata")]),a._v("接口，应用程序可以使用该接口实例来确定目前使用的数据源是否支持某一特性。另外，JDBC API中还定义了转义语法，应用程序能够访问JDBC厂商提供的非标准特性。")]),a._v(" "),e("p",[a._v("获取"),e("code",[a._v("Connection")]),a._v("对象之后，可以设置事务属性，并创建"),e("code",[a._v("Statement")]),a._v("等类型的对象。"),e("code",[a._v("Statement")]),a._v("可以理解为JDBC API中提供的SQL语句执行器，通过该实例对象调用方法执行相应操作。")]),a._v(" "),e("h2",{attrs:{id:"处理sql语句执行结果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理sql语句执行结果"}},[a._v("#")]),a._v(" 处理SQL语句执行结果")]),a._v(" "),e("p",[a._v("SQL语句执行后，可以通过调用"),e("code",[a._v("getResultSet()")]),a._v("方法获取查询结果集，或者通过调用"),e("code",[a._v("getUpdateCount()")]),a._v("方法来获取更新操作影响的行数。前者返回"),e("code",[a._v("ResultSet")]),a._v("类型的实例，可以通过该实例获取结果集。")]),a._v(" "),e("h2",{attrs:{id:"关闭连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关闭连接"}},[a._v("#")]),a._v(" 关闭连接")]),a._v(" "),e("p",[a._v("当我们使用完"),e("code",[a._v("Connection")]),a._v("对象后，需要显式地关闭该对象。可以通过"),e("code",[a._v("close()")]),a._v("方法关闭，还可以通过"),e("code",[a._v("isClosed()")]),a._v("方法判断连接是否关闭，同时通过"),e("code",[a._v("isValid()")]),a._v("方法判断连接是否有效。当连接关闭后或者是无效时，调用除了前面所说的几个方法外，将会抛出"),e("code",[a._v("SQLException")]),a._v("。")]),a._v(" "),e("h2",{attrs:{id:"jdbc-api中的类与接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jdbc-api中的类与接口"}},[a._v("#")]),a._v(" JDBC API中的类与接口")]),a._v(" "),e("p",[a._v("前面讲了使用JDBC API的基本过程，JDBC API由java.sql和javax.sql两个包构成。")]),a._v(" "),e("h3",{attrs:{id:"java-sql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-sql"}},[a._v("#")]),a._v(" java.sql")]),a._v(" "),e("p",[a._v("java.sql包含了最核心的API，可以把这些API分为数据类型接口，枚举类，驱动相关类和接口，异常类。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.harrisonlee.net/image-20210108221028920.png",alt:"image-20210108221028920"}})]),a._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.harrisonlee.net/image-20210108221114835.png",alt:"image-20210108221114835"}})]),a._v(" "),e("p",[a._v("除了这几类外，还有一些API，主要包括以下几个接口：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.harrisonlee.net/image-20210108221138209.png",alt:"image-20210108221138209"}})]),a._v(" "),e("p",[a._v("这些接口都继承自"),e("code",[a._v("java.sql.Wrapper")]),a._v("，该接口提供了程序访问原始类型的功能，从而使用JDBC驱动中一些非标准的特性。部分接口之间的关系如下图所示（注意不是严格的UML类图）：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.harrisonlee.net/image-20210108220036404.png",alt:"image-20210108220036404"}})]),a._v(" "),e("h3",{attrs:{id:"javax-sql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javax-sql"}},[a._v("#")]),a._v(" javax.sql")]),a._v(" "),e("p",[a._v("javax.sql包中的类和接口最早是由JDBC 2.0版本的可选包提供的，这个可选包最早出现在J2SE 1.2版本中。该包主要包括了数据源，连接池相关，ResultSet的扩展和分布式扩展相关的API：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.harrisonlee.net/image-20210108220840550.png",alt:"image-20210108220840550"}})]),a._v(" "),e("p",[a._v("两个包的关系体现在通过"),e("code",[a._v("javax.sql.DataSource")]),a._v("获取"),e("code",[a._v("java.sql.Connection")]),a._v("实例。另外，javax.sql包还提供了一个"),e("code",[a._v("PooledConnection")]),a._v("接口，当应用程序调用"),e("code",[a._v("DataSource")]),a._v("对象的"),e("code",[a._v("getConnection()")]),a._v("方法时，返回一个"),e("code",[a._v("Connection")]),a._v("对象；但当使用数据库连接池时（如Druid），返回的实际上是"),e("code",[a._v("PooledConnection")]),a._v("对象，一般情况下，如果连接池中存在"),e("code",[a._v("PooledConnection")]),a._v("对象，则直接返回；否则通过"),e("code",[a._v("ConnectionPoolDataSource")]),a._v("对象的"),e("code",[a._v("getConnection()")]),a._v("方法创建新的连接。")]),a._v(" "),e("h2",{attrs:{id:"driver与drivermanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#driver与drivermanager"}},[a._v("#")]),a._v(" Driver与DriverManager")]),a._v(" "),e("p",[a._v("JDBC驱动的实现方式可能有很多种，主要包括以下几种：")]),a._v(" "),e("ul",[e("li",[a._v("JDBC-ODBC Bridge Driver")]),a._v(" "),e("li",[a._v("Native API Driver")]),a._v(" "),e("li",[a._v("JDBC-Net Driver")]),a._v(" "),e("li",[a._v("Native Protocol Driver")])]),a._v(" "),e("p",[a._v("最常使用的就是Native Protocol Driver，通常由数据库厂商直接提供。")]),a._v(" "),e("p",[a._v("所有的JDBC驱动必须实现"),e("code",[a._v("java.sql.Driver")]),a._v("接口，而且实现类包含了一个静态初始化代码块，例如"),e("code",[a._v("com.mysql.cj.jdbc.Driver")]),a._v("中就包含如下代码：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("java"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("sql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("DriverManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerDriver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Driver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SQLException")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("E")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RuntimeException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Can\'t register driver!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("这也是为什么我们使用JDBC操作数据库时一般会先加载驱动，例如：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("forName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"com.mysql.cj.jdbc.Driver"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[e("code",[a._v("Driver")]),a._v("接口中提供了一个"),e("code",[a._v("acceptsURL()")]),a._v("方法，"),e("code",[a._v("DriverManager")]),a._v("类可以通过"),e("code",[a._v("Driver")]),a._v("的实现类来调用该方法判断一个给定的URL是否能与数据库成功地建立连接。当我们试图调用"),e("code",[a._v("DriverManager")]),a._v("的"),e("code",[a._v("getConnection()")]),a._v("时，会调用"),e("code",[a._v("Driver")]),a._v("接口的"),e("code",[a._v("connect()")]),a._v("方法。")]),a._v(" "),e("p",[a._v("JDBC 4.0及以上的版本可以不用手动加载驱动，原因是得益于Java的SPI机制，"),e("code",[a._v("DriverManager")]),a._v("可以通过"),e("code",[a._v("ServiceLoader")]),a._v("获取类路径下的所有的驱动，当然前提是这些驱动必须符合SPI的发现机制，比如对于mysql的驱动，在"),e("strong",[a._v("classpath:/META-INF/services/java.sql.Driver")]),a._v("文件中保存了mysql的jdbc驱动：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mysql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("cj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jdbc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("Driver")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("另外，注意不同的JDK版本实现好像有不一致的地方，在Java11中，"),e("code",[a._v("DriverManager")]),a._v("不再是通过静态代码块加载驱动，而是在获取连接时（调用"),e("code",[a._v("getConnection()")]),a._v("时）进行懒加载，具体加载的逻辑在"),e("code",[a._v("ensureDriversInitialized()")]),a._v("方法中。")]),a._v(" "),e("h2",{attrs:{id:"datasource"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datasource"}},[a._v("#")]),a._v(" DataSource")]),a._v(" "),e("p",[e("code",[a._v("DataSource")]),a._v("对象用于表示能够提供数据库连接的数据源对象，如果数据库相关的信息发生了变化，则可以简单地修改"),e("code",[a._v("DataSource")]),a._v("对象的属性来反映这些变化，而不用修改应用程序的任何代码。")]),a._v(" "),e("p",[e("code",[a._v("DataSource")]),a._v("接口可以实现来提供以下两种功能：")]),a._v(" "),e("ul",[e("li",[a._v("通过连接池提高系统的性能和伸缩性")]),a._v(" "),e("li",[a._v("通过"),e("code",[a._v("XADataSource")]),a._v("接口支持分布式事务。")])]),a._v(" "),e("p",[a._v("同"),e("code",[a._v("DriverManager")]),a._v("一样，"),e("code",[a._v("DataSource")]),a._v("也提供了"),e("code",[a._v("getConnection()")]),a._v("方法，该方法同样调用了"),e("code",[a._v("Driver")]),a._v("实现类的"),e("code",[a._v("connect()")]),a._v("方法。")]),a._v(" "),e("p",[a._v("实际项目中更多的是使用"),e("code",[a._v("DataSource")]),a._v("而不是"),e("code",[a._v("DriverManager")]),a._v("，而一般项目中不会直接创建"),e("code",[a._v("DataSource")]),a._v("实例，所以关于这部分内容的分析待后面分析到相应实现时再补充。")]),a._v(" "),e("h2",{attrs:{id:"statement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#statement"}},[a._v("#")]),a._v(" Statement")]),a._v(" "),e("p",[a._v("前面提到，"),e("code",[a._v("Statement")]),a._v("相当于SQL执行器，该接口内部定义了执行SQL语句的方法。另外，API中还提供了"),e("code",[a._v("PreparedStatement")]),a._v("（继承自"),e("code",[a._v("Statement")]),a._v("）和"),e("code",[a._v("CallableStatement")]),a._v("（继承自"),e("code",[a._v("PreparedStatement")]),a._v("）这两个子接口。")]),a._v(" "),e("p",[a._v("每个"),e("code",[a._v("Connection")]),a._v("实例可以创建多个"),e("code",[a._v("Statement")]),a._v("实例，并可以在创建时指定"),e("code",[a._v("ResultSet")]),a._v("的属性。")]),a._v(" "),e("p",[e("code",[a._v("Statement")]),a._v("中主要定义了三种执行SQL语句的方法：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ResultSet")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("executeQuery")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" sql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SQLException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 执行查询操作，返回结果集")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("executeUpdate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" sql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SQLException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 执行更新操作（增删改），返回受影响行数")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 不区分查询还是更新，当返回true时，则表示是查询操作并可以获取ResultSet;如果是false,则表示是更新操作，可以获取受影响行数")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" sql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" autoGeneratedKeys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SQLException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("关于上述方法的重载以及其他更多方法请参考"),e("code",[a._v("Statement")]),a._v("的API文档。")]),a._v(" "),e("p",[e("code",[a._v("PreparedStatement")]),a._v("接口继承自"),e("code",[a._v("Statement")]),a._v("，在其基础上增加了占位符的功能（占位符为"),e("code",[a._v("?")]),a._v("）。"),e("code",[a._v("CallableStatement")]),a._v("在"),e("code",[a._v("PreparedStatement")]),a._v("的基础上增加了调用存储过程和检索调用结果的功能。")]),a._v(" "),e("p",[e("code",[a._v("Statemetn")]),a._v("执行完SQL后也需要关闭，可以通过调用其"),e("code",[a._v("close()")]),a._v("方法进行关闭，可以通过"),e("code",[a._v("isClosed()")]),a._v("方法判断是否已经关闭了。")]),a._v(" "),e("h2",{attrs:{id:"resultset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#resultset"}},[a._v("#")]),a._v(" ResultSet")]),a._v(" "),e("h3",{attrs:{id:"游标操作方式和敏感性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#游标操作方式和敏感性"}},[a._v("#")]),a._v(" 游标操作方式和敏感性")]),a._v(" "),e("p",[e("code",[a._v("ResultSet")]),a._v("提供了检索和操作SQL执行结果相关的方法，其属性主要体现在两个方面：")]),a._v(" "),e("ul",[e("li",[a._v("游标可操作的方式。")]),a._v(" "),e("li",[e("code",[a._v("ResultSet")]),a._v("对象的修改对数据库的影响（敏感性）。")])]),a._v(" "),e("p",[a._v("一共有三种不同类型的"),e("code",[a._v("ResultSet")]),a._v("：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("TYPE_FORWARD_ONLY")]),a._v("：不可滚动，游标只能向前移动，从第一行到最后一行，不能向后移动（默认为该值）。")]),a._v(" "),e("li",[e("code",[a._v("TYPE_SCROLL_INSENSITIVE")]),a._v("：可滚动，可以相对于当前位置移动，也可以移动到绝对位置。这种类型的"),e("code",[a._v("ResultSet")]),a._v("对数据库"),e("strong",[a._v("不")]),a._v("敏感。")]),a._v(" "),e("li",[e("code",[a._v("TYPE_SCROLL_SENSITIVE")]),a._v("：可滚动，可以相对于当前位置移动，也可以移动到绝对位置。这种类型的"),e("code",[a._v("ResultSet")]),a._v("对数据库敏感。")])]),a._v(" "),e("p",[e("code",[a._v("DatabaseMetadata")]),a._v("接口中提供了一个"),e("code",[a._v("supportsResultSetType()")]),a._v("方法，用于判断数据库驱动是否支持某种类型的"),e("code",[a._v("ResultSet")]),a._v("对象。")]),a._v(" "),e("h3",{attrs:{id:"并行性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#并行性"}},[a._v("#")]),a._v(" 并行性")]),a._v(" "),e("p",[e("code",[a._v("ResultSet")]),a._v("对象的并行性决定了它支持更新的级别，目前JDBC中支持两个级别：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("CONCUR_READ_ONLY")]),a._v("：表示只能从"),e("code",[a._v("ResultSet")]),a._v("对象中读取数据，不能更新数据（默认为该值）。")]),a._v(" "),e("li",[e("code",[a._v("CONCUR_UPDATABLE")]),a._v("：表示既可以读取数据，又可以更新数据。")])]),a._v(" "),e("p",[e("code",[a._v("DatabaseMetaData")]),a._v("接口中提供了一个"),e("code",[a._v("supportsResultSetConcurrency()")]),a._v("方法，判断JDBC驱动是否支持某一级别的并行性。")]),a._v(" "),e("h3",{attrs:{id:"可保持性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可保持性"}},[a._v("#")]),a._v(" 可保持性")]),a._v(" "),e("p",[e("code",[a._v("ResultSet")]),a._v("的可保持性是指调用"),e("code",[a._v("Connection")]),a._v("的"),e("code",[a._v("commit()")]),a._v("方法后，是否关闭在当前事务中创建的"),e("code",[a._v("ResultSet")]),a._v("对象。下面两个常量可以用来在创建"),e("code",[a._v("Statement")]),a._v("实例时指定"),e("code",[a._v("ResultSet")]),a._v("的可保持性：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("HOLD_CURSORS_OVER_COMMIT")]),a._v("：提交事务时，不关闭"),e("code",[a._v("ResultSet")]),a._v("对象。")]),a._v(" "),e("li",[e("code",[a._v("CLOSE_CURSORS_AT_COMMIT")]),a._v("：提交事务时，关闭"),e("code",[a._v("ResultSet")]),a._v("对象，从而可以提高性能。")])]),a._v(" "),e("p",[a._v("默认可保持性取决于驱动的实现，")]),a._v(" "),e("h3",{attrs:{id:"关闭resultset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关闭resultset"}},[a._v("#")]),a._v(" 关闭ResultSet")]),a._v(" "),e("p",[a._v("在下面两种情况下，"),e("code",[a._v("ResultSet")]),a._v("会被显式地关闭：")]),a._v(" "),e("ul",[e("li",[a._v("调用其自身的"),e("code",[a._v("close()")]),a._v("方法。")]),a._v(" "),e("li",[a._v("调用创建"),e("code",[a._v("ResultSet")]),a._v("对象的"),e("code",[a._v("Statement")]),a._v("或相关联的"),e("code",[a._v("Connection")]),a._v("的"),e("code",[a._v("close()")]),a._v("方法。")])]),a._v(" "),e("p",[a._v("在下面两种情况下，"),e("code",[a._v("ResultSet")]),a._v("会被隐式地关闭：")]),a._v(" "),e("ul",[e("li",[a._v("相关联的"),e("code",[a._v("Statement")]),a._v("实例重复执行时。")]),a._v(" "),e("li",[a._v("可保持性为"),e("code",[a._v("CLOSE_CURSORS_AT_COMMIT")]),a._v("的"),e("code",[a._v("ResultSet")]),a._v("对象在事务提交后会被关闭。")])]),a._v(" "),e("h2",{attrs:{id:"事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[a._v("#")]),a._v(" 事务")]),a._v(" "),e("p",[a._v("JDBC API中的事务管理符合SQL:2003规范，主要包含下面几个概念：")]),a._v(" "),e("ul",[e("li",[a._v("自动提交模式")]),a._v(" "),e("li",[a._v("事务隔离级别")]),a._v(" "),e("li",[a._v("保存点")])]),a._v(" "),e("h2",{attrs:{id:"databasemetadata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#databasemetadata"}},[a._v("#")]),a._v(" DatabaseMetaData")]),a._v(" "),e("p",[e("code",[a._v("DatabaseMetaData")]),a._v("接口用于提供底层数据源相关的信息，该接口主要用于为应用程序或工具确定如何与底层数据源交互。该接口提供了很多方法，主要可以分为以下几类：")]),a._v(" "),e("ul",[e("li",[a._v("获取数据源信息")]),a._v(" "),e("li",[a._v("确定数据源是否支持某一特性或功能")]),a._v(" "),e("li",[a._v("获取数据源限制")]),a._v(" "),e("li",[a._v("确定数据源包含哪些JDBC对象以及这些对象的属性")]),a._v(" "),e("li",[a._v("获取数据源对事务的支持")])]),a._v(" "),e("p",[a._v("具体信息请参考对应的Java Doc。")]),a._v(" "),e("h2",{attrs:{id:"常见数据库的驱动实现类名和url格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见数据库的驱动实现类名和url格式"}},[a._v("#")]),a._v(" 常见数据库的驱动实现类名和URL格式")]),a._v(" "),e("h3",{attrs:{id:"mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[a._v("#")]),a._v(" MySQL")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mysql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jdbc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("Driver")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 旧")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mysql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("cj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jdbc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("Driver")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 新")]),a._v("\njdbc"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("mysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("host"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("database_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("parameter1"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("parameter2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h3",{attrs:{id:"oracle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oracle"}},[a._v("#")]),a._v(" Oracle")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("oracle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jdbc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("driver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("OracleDriver")]),a._v("\njdbc"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("oracle"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("@"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//<host>:<port>/<database_name>")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://book.douban.com/subject/34836563/",target:"_blank",rel:"noopener noreferrer"}},[a._v("《MyBatis 3源码深度解析》"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=v.exports}}]);